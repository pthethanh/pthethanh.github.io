class AnyTool{static get isReadOnlySupported(){return!0}static get displayInToolbox(){return!0}static get enableLineBreaks(){return!0}static get toolbox(){return{icon:this.icon||'<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4" /></svg>',title:this.title||"Raw Data"}}constructor({data:t,config:e,api:a,readOnly:i}){this.api=a,this.readOnly=i,this.icon=e.icon,this.title=e.title,this.defaultData=JSON.stringify(e.data,null,4),this.placeholder=e.placeholder||RawTool.DEFAULT_PLACEHOLDER,this.CSS={baseClass:this.api.styles.block,input:this.api.styles.input,wrapper:"ce-rawtool",textarea:"ce-rawtool__textarea"},this.data=JSON.stringify(t,null,4),this.textarea=null,this.resizeDebounce=null}render(){const t=document.createElement("div");return this.textarea=document.createElement("textarea"),t.classList.add(this.CSS.baseClass,this.CSS.wrapper),this.textarea.classList.add(this.CSS.textarea,this.CSS.input),'"{}"'===JSON.stringify(this.data)?this.textarea.textContent=this.defaultData:this.textarea.textContent=this.data,this.textarea.placeholder=this.placeholder,this.readOnly?this.textarea.disabled=!0:this.textarea.addEventListener("input",()=>{this.onInput()}),t.appendChild(this.textarea),setTimeout(()=>{this.resize()},100),t}save(t){return JSON.parse(t.querySelector("textarea").value)}static get DEFAULT_PLACEHOLDER(){return"Enter raw data"}static get sanitize(){return{html:!0}}onInput(){this.resizeDebounce&&clearTimeout(this.resizeDebounce),this.resizeDebounce=setTimeout(()=>{this.resize()},200)}resize(){this.textarea.style.height="auto",this.textarea.style.height=this.textarea.scrollHeight+"px"}}